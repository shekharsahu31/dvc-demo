virtualenv venv
venv\Scripts\activate
pip install dvc

We will track data.txt , so make data.txt and put a line in it

dvc init - one new folder and one new file will be made - .dvc / .dvcignore 

git status - only files - .dvcignore // in .dvc -> .gitignore // config will be tracked not others and we can also put data.txt in .gitignore so that it do not 
             go to GITHUB ,, IN .dvcignore - we add files which need to be ignored by DVC only **

git commit -m "dvc init" - as 3 above files need to be commit as they are automatically in green as we can see , do not use git add .

dvc add data.txt - to add file to DVC for tracking # data.txt should be untracked by GIT- to remove -  git rm -r --cached data.txt
                                                                                                       git commit -m "stop tracking data.txt

now you will see data.txt.dvc will be made + in gitignore /data.txt will be added automatically

git add .gitignore // ** data.txt.dvc -    so now we will have to add git add .gitignore // ** data.txt.dvc - this file will have hashed codes for data for
                                           tracking the data + other meta data how this hash mapping is done -- in .dvc - cache - a file will be created with name 
                                           -hashed key - data - our text of data.txt we can ave this cache folder in any cloud storage for safety.

change content of data.txt

dvc add data.txt   - in .dvc/cache - another folder and file will be made for new version , keeping folder and file for prev version too
                     data.txt.dvc will get updated will new entries as per the new data in file data.txt


again we have to git add data.txt.dvc
git commit -m "second version of data.txt"

git log

third version -
make changes to data.txt
dvc add data.txt
git add data.txt.dvc
git commit -m "third version"

git log

What if we want to go to any version of DATA again -> like undo to prev data -> we have to undo git also - data.txt.dvc than we undo dvc checkout as it will get hashed key for undo data.text.dvc will map it and undo the data.txt to that version of data

git log - > copy the commit id of second version commiting
git checkout e4769ea40b281b337c659a14a98ee13e416332a0 - > the data.txt.dvc will be made/undo to that previous data/ value.
dvc checkout -> looking data.txt.dvc and mapping data in .dvc it will change the content of data.txt

again going back to recent / lastest working-
git checkout main
dvc checkout